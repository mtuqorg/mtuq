#!/bin/bash -e


# USAGE
#   plot_mt_xy out filetype mt_file mw_file xmin xmax ymin ymax xlabel ylabel [title] [subtitle]
#


# add mtuq/graphics/_gmt to the path
export PATH=${PATH:+${PATH}:}$(dirname ${BASH_SOURCE[0]})
source _gmt_functions


# parse input arguments
if [ $# -lt 16 ] ; then
    echo "plot_lune: bad input arguments"
    exit -1
fi

# output file
filename=$1
filetype=$2

# ASCII input files
ascii_data=$3
supplemental_data=$4

# colorbar
value_min=$5
value_max=$6
value_exp=$7
cpt_step=$8
cpt_name=$9
flip_cpt=${10}
colorbar_type=${11}
colorbar_label=${12}

# markers
marker_coords=${13}
marker_type=${14}

# labels
title="${15}"
subtitle="${16}"

title_size="25p"
subtitle_size="20p"
label_size="12p"

out=${filename}
ps="${out}.ps"
tmp=tmp_${out//\//__}


# parse axis limits

xmin=$(cat $ascii_data | awk 'NR==1{min = $1 + 0; next} {if ($1 < min) min = $1;} END {print min}')
xmax=$(cat $ascii_data | awk 'NR==1{max = $1 + 0; next} {if ($1 > max) max = $1;} END {print max}')
ymin=$(cat $ascii_data | awk 'NR==1{min = $2 + 0; next} {if ($2 < min) min = $2;} END {print min}')
ymax=$(cat $ascii_data | awk 'NR==1{max = $2 + 0; next} {if ($2 > max) max = $2;} END {print max}')

xmin=$(printf "%f" ${xmin})
xmax=$(printf "%f" ${xmax})
ymin=$(printf "%f" ${ymin})
ymax=$(printf "%f" ${ymax})

xlen=$(echo ${xmax} - ${xmin} | bc -l)
x1=$(echo ${xmin} - 0.1*${xlen} | bc -l)
x2=$(echo ${xmax} + 0.1*${xlen} | bc -l)
xc=$(echo "($xmin + $xmax)/2." | bc -l)

ylen=$(echo ${ymax} - ${ymin} | bc -l)
y1=$(echo ${ymin} - 0.1*${ylen} | bc -l)
y2=$(echo ${ymax} + 0.1*${ylen} | bc -l)
yc=$(echo "($ymin + $ymax)/2." | bc -l)

dx=$(echo ${xlen}/2. | bc -l)
dy=$(echo ${ylen}/2. | bc -l)

proj_arg="-JX4i"
area_arg="-R${x1}/${x2}/${y1}/${y2}"


# parse axis labels

xlabel=""
ylabel=""

xlabel_arg=""
if [[ ! -z "$xlabel" ]]; then
  xlabel_arg="+l${xlabel}"
fi

ylabel_arg=""
if [[ ! -z "$ylabel" ]]; then
  ylabel_arg="+l${ylabel}"
fi


# markers and annotations

radius=0.4



# adjust tick label precision
dx=$(printf "%.3f" $dx)
dy=$(printf "%.3f" $dy)


# apply default settings
gmt_settings


# specify basemap
gmt psbasemap $proj_arg $area_arg -BneSW -Bxa${dx}"${xlabel_arg}" -Bya${dy}"${ylabel_arg}" -Xc -Yr4. -K > $ps


# generate color palette
cpt_args=$( get_cpt_args $cpt_name $flip_cpt )
range_arg="-T${value_min}/${value_max}/${cpt_step}"
gmt makecpt $cpt_args -D $range_arg > $tmp.cpt


# adjust interpolation
dx=$(echo ${xlen}/8. | bc -l)
dy=$(echo ${ylen}/8. | bc -l)


# plot misfit values with extrapolation
gmt surface $ascii_data $area_arg -I$dx/$dy -G$tmp.nc
gmt grdview $tmp.nc $proj_arg $area_arg -C$tmp.cpt -Qs -I -O -K >> $ps

# plot misfit values without extrapolation
#gmt pscontour $ascii_data $proj_arg $area_arg -C$tmp.cpt -I -N -A- -O -K >> $ps


# plot focal mechanisms tradeoffs
if [ -f $supplemental_data ]; then
    gmt psmeca $supplemental_data -N -Sm$radius $proj_arg $area_arg -Z$cpt_name -O -K >> $ps
fi


# display colorbar
if [ $colorbar_type -ne 0 ]; then

    # controls label below horizontal colorbar
    arg1=$( get_colorbar_arg1 "$colorbar_label" )

    # controls label to the right of horizontal colorbar
    arg2=$( get_colorbar_exp $value_exp )

    gmt gmtset FONT_ANNOT $label_size
    gmt gmtset FONT_LABEL $label_size

    gmt psscale -C$tmp.cpt -Dx0./-0.9+w4/0.3+h "$arg1" "$arg2" -O -K >> $ps

fi



# display title
add_title $ps $proj_arg $area_arg $xc $y2 "$title" "$subtitle" $title_size $subtitle_size


custom_psclose $ps
custom_psconvert $ps $out $filetype


#echo "  finished writing: $out"

rm tmp*$out*
rm $ps

