#!/bin/bash -e

#
# PLOT_LUNE
#    plots values from ASCII file on eigenvalue lune
#


# add mtuq/graphics/_gmt to the path
export PATH=${PATH:+${PATH}:}$(dirname ${BASH_SOURCE[0]})
source _gmt_functions


# parse input arguments
if [ $# -lt 16 ] ; then
    echo "plot_lune: bad input arguments"
    exit -1
fi

# output file
filename=$1
filetype=$2

# ASCII input files
ascii_data=$3
supplemental_data=$4

# colorbar
value_min=$5
value_max=$6
value_exp=$7
cpt_step=$8
cpt_name=$9
flip_cpt=${10}
colorbar_type=${11}
colorbar_label="${12}"

# markers
marker_coords=${13}
marker_type=${14}

title="${15}"
subtitle="${16}"

title_size="25p"
subtitle_size="20p"
label_size="15p"


proj_arg="-Jx3.9/3.9i"
area_arg="-R-0.35/0.35/-1.178/1.178"

out=${filename}
ps="${out}.ps"
tmp=tmp_${out//\//__}


# apply default settings
gmt_settings


# specify basemap
gmt psbasemap $proj_arg $area_arg -Bf10g10/f10g10 -Xc -Yr1.2 -K > $ps


# generate color palette
cpt_args=$( get_cpt_args $cpt_name $flip_cpt )
range_arg="-T${value_min}/${value_max}/${cpt_step}"
gmt makecpt $cpt_args -D $range_arg > $tmp.cpt

# plot misfit values
gmt pscontour $ascii_data $proj_arg $area_arg -C$tmp.cpt -I -N -A- -O -K >> $ps


# plot focal mechanisms tradeoffs
if [ -f $supplemental_data ]; then
    gmt psmeca $supplemental_data -N -Sm0.2 $proj_arg $area_arg -Z$cpt_name -O -K >> $ps
fi


# display reference arcs
#add_vw_arcs $ps $proj_arg $area_arg


# display title
add_title_vw $ps $proj_arg $area_arg "$title" "$subtitle"


# display colorbar
if [ $colorbar_type -ne 0 ]; then

    # controls label below horizontal colorbar
    arg1=$( get_colorbar_arg1 "$colorbar_label" )

    # controls label to the right of horizontal colorbar
    arg2=$( get_colorbar_exp $value_exp )

    gmt gmtset FONT_ANNOT $label_size
    gmt gmtset FONT_LABEL $label_size
 
fi


if [ $colorbar_type -eq 1 ]; then
    # small colorbar at bottom
    gmt psscale -C$tmp.cpt -Dx0.00/-0.40+w2.7/0.2+h "$arg1" "$arg2" -O -K >> $ps
fi

if [ $colorbar_type -eq 2 ]; then
    # medium colorbar at bottom
    gmt psscale -C$tmp.cpt -Dx0.00/-0.40+w2.7/0.3+h "$arg1" "$arg2" -O -K >> $ps

fi


# read marker coordinates from marker_coords file, if it exists
if [ -f $marker_coords ]; then
    add_markers_from_file "$marker_coords" "$ps" $proj_arg $area_arg


elif [ $marker_type -ne 0 ]; then
    add_marker $marker_type "$ascii_data" "$ps" $proj_arg $area_arg
fi


custom_psclose $ps
custom_psconvert $ps $out $filetype


#echo "  finished writing: $out"


rm $tmp*
rm $ps


